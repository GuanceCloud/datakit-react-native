# Resolve react_native_pods.rb with node to allow for hoisting
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

platform :ios, min_ios_version_supported
prepare_react_native_project!

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'FtMobileAgentExample' do
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

 
      pod 'FTMobileReactNativeSDK', :path => '../..'

  # Enables Flipper.
  #
  # Note that if you have use_frameworks! enabled, Flipper will not work and
  # you should disable these next few lines.
#  use_flipper!({ 'Flipper-Folly' => '2.3.0' })
#  pod 'react-native-config', :path => '../node_modules/react-native-config'



  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      # :ccache_enabled => true
    )
    
    # 替换 #import <FTThreadDispatchManager.h> 为 #import <FTMobileSDK/FTThreadDispatchManager.h>
#    installer.pods_project.targets.each do |cocoapods_target|
#      if cocoapods_target.name == 'FTMobileReactNativeSDK'
#        # 假设我们知道 cocoapods_target 对应的 Xcode target 名称相同
#        xcode_target_name = cocoapods_target.name
#        # 获取 Xcode 项目对象
#        xcode_project = installer.pods_project
#        # 遍历 Xcode 项目中的 targets
#        xcode_project.native_targets.each do |xcode_target|
#          if xcode_target.name == xcode_target_name
#            # 访问 “Compile Sources” build phase
#            compile_sources_phase = xcode_target.build_phases.find { |phase| phase.isa == 'PBXSourcesBuildPhase' }
#            if compile_sources_phase
#              # 遍历源文件列表
#              compile_sources_phase.files_references.each do |file_reference|
#                # 获取源文件路径（相对于 Xcode 项目）
#                source_file_path = file_reference.real_path
#                fileName = File.basename(source_file_path)
#                # 判断文件名是否是 FTMobileReactNative.m
#                if fileName == 'FTMobileReactNative.m'
#                  puts "Updated #{source_file_path}"
#                  content = File.read(source_file_path)
#                                  # 替换 import 语句
#                  updated_content = content.gsub(/#import <FTThreadDispatchManager\.h>/, '#import <FTMobileSDK/FTThreadDispatchManager.h>')
#                                 # 写回文件
#                 File.write(source_file_path, updated_content)
#                end
#              end
#            end
#          end
#        end
#      end
#    end

  end
end
